#!bin/bash

configDir="$HOME/config"
toolsDir="$HOME/tools"
dataDir="$HOME/data"
pentestDir="$HOME/pentest"
projectDataDir="$HOME/projects"
outputDIR="$HOME/output"
wordlistDir="$HOME/wordlists"

amassConfig="$configDIR/amass.ini"
resolvers="$configDIR/resolvers.txt"
#dnsWL="/usr/share/seclists/Discovery/DNS/namelist.txt"
dnsWL="/usr/share/seclists/Discovery/DNS/dns-Jhaddix.txt"
#dnsWL="$wordlistDir/names.txt"
altWL="$wordlistDir/altdns230.txt"
commonspeakWL="$wordlistDir/commonspeak2-wordlists/subdomains/subdomains.txt"

fecha=$(date +"%Y-%m-%d")
inicio=$(date)
fin=""

# site: nokia.com
# subdomains
#rank subdomains by unpopularity: less travelled road
# ip address
# which programming language: whatweb
# open ports and services: nmap ip -Pn / nmap ip -sV 
# nmap ip | nmap -sC ip
# server info: iis, apache, tomcat, ngnix
#

PassiveEnumeration(){
  sublist3r -d $domain -t 10 -v -o $FSUBDOMAINS
  amass enum -passive -config ~/config/amass.ini -d $domain -rf ~/config/resolvers.txt >> $FSUBDOMAINS
  subfinder --silent -rL $RESOLVERS -d $domain >> $FSUBDOMAINS
}
FdnsEnumeration(){
  # Subdomains from Rapid7 FDNS
  python3 $HOME/pentest/commonspeak2.py $domain >> $FSUBDOMAINS
}
CertEnumeration(){
  curl -s https://certspotter.com/api/v0/certs\?domain\=$domain | jq '.[].dns_names[]' | sed 's/\"//g' | sed 's/\*\.//g' | sort -u | grep $domain >> $FSUBDOMAINS
  $HOME/tools/massdns/scripts/ct.py $domain >> $FSUBDOMAINS
}

EsotericEmuration(){
  esoteric test
}

Alterations(){
  altdns -i $FRESOLVED -o $FALTERATIONS -w $WL_ALT
}
ForceBrute(){
  $HOME/tools/massdns/scripts/subbrute.py $dnsWL $domain >> $FSUBDOMAINS
}
ResolvedDNS(){
  massdns -s 1000 -o S -q -r $resolvers $FSUBDOMAINS -w $FRESOLVED
  sed 's/A.*//' $FRESOLVED | sed 's/CN.*//' | sed 's/\..$//' | sort -u -o $FRESOLVED
}
DiscoveryServices(){
  test
}

HostAlive(){
  echo "hostalive subdomain of $domain"
  while read SUBDOMAIN || [[ -n "$SUBDOMAIN" ]]
  do
    if [ $(curl --write-out %{http_code} --silent --output /dev/null -m 5 http://$SUBDOMAIN) = 000 ] || [$(curl --write-out %{http_code} --silent --output /dev/null -m 5 -k https://$SUBDOMAIN) = 000 ]
    then
      echo $SUBDOMAIN >> $FUNREACHABLE
    else
      echo $SUBDOMAIN >> $FHOSTLIVE
    fi
  done < $FRESOLVED
}

DirSearch(){
  echo "dirsearch subdomains responsive of $domain"
  while read SUBDOMAIN || [[ -n "$SUBDOMAIN" ]]
  do
    sleep 1
    dirsearch.py -e php,asp,aspx,jsp,html,zip,jar,sql -u $SUBDOMAIN
    report $SUBDOMAIN
    sleep 1
  done < $FHOSTLIVE
}

ScreenShot(){
  echo "taking a screenshot responsive of $domain"
  python3 ~/tools/webscreenshot/webscreenshot.py -o $DSCREENSHOTS -i $FHOSTLIVE --timeout=10 -m
  cd $DSCREENSHOTS
  rename 's/_/-/g' -- *
  cd $DRECON

  cat hosts.txt | aquatone -ports xlarge -out ~/aquatone/example.com
  cat scan.xml | aquatone -nmap
}

enumeration(){
  sort -u $FSUBDOMAINS -o $FSUBDOMAINS

  massdns -s 1000 -o S -q -r $RESOLVERS $FALTERATIONS >> $FRESOLVED
  sed 's/A.*//' $FRESOLVED | sed 's/CN.*//' | sed 's/\..$//' | sort -u -o $FRESOLVED

  exit 0
}

Report(){
  echo "report subdomains responsive of $domain"
  REPORT_SUBDOMAIN="$DREPORTS/$SUBDOMAIN.html"
  touch $REPORT_SUBDOMAIN
  echo "<title> report for $SUBDOMAIN </title>" >> $REPORT_SUBDOMAIN
  echo "<html>" >> $REPORT_SUBDOMAIN
  echo "<head>" >> $REPORT_SUBDOMAIN
  echo "<link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Mina\" rel=\"stylesheet\">" >> $REPORT_SUBDOMAIN
  echo "</head>" >> $REPORT_SUBDOMAIN
  echo "<body><meta charset=\"utf-8\"> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"> <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\"> <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js\"></script> <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\"></script></body>" >> $REPORT_SUBDOMAIN
  echo "<div class=\"jumbotron text-center\"><h1> Recon Report for <a/href=\"https://$SUBDOMAIN\">$SUBDOMAIN</a></h1>" >> $REPORT_SUBDOMAIN
  echo "<p> Generated by <a/href=\"https://github.com/nahamsec/lazyrecon\"> LazyRecon</a> on $(date) </p></div>" >> $REPORT_SUBDOMAIN
  
  
  echo "   <div clsas=\"row\">" >> $REPORT_SUBDOMAIN
  echo "     <div class=\"col-sm-6\">" >> $REPORT_SUBDOMAIN
  echo "     <div style=\"font-family: 'Mina', serif;\"><h2>Dirsearch</h2></div>" >> $REPORT_SUBDOMAIN
  echo "<pre>" >> $REPORT_SUBDOMAIN
  
  cat ~/tools/dirsearch/reports/$SUBDOMAIN/* | while read rline; do echo "$rline" >> $REPORT_SUBDOMAIN
  done
  
  echo "</pre>   </div>" >> $REPORT_SUBDOMAIN
  
  echo "     <div class=\"col-sm-6\">" >> $REPORT_SUBDOMAIN
  echo "<div style=\"font-family: 'Mina', serif;\"><h2>Screeshot</h2></div>" >> $REPORT_SUBDOMAIN
  echo "<pre>" >> $REPORT_SUBDOMAIN
  echo "Port 80                              Port 443" >> $REPORT_SUBDOMAIN
  echo "<img/src=\"../screenshots/http-$SUBDOMAIN-80.png\" style=\"max-width: 500px;\"> <img/src=\"../screenshots/https-$SUBDOMAIN-443.png\" style=\"max-width: 500px;\"> <br>" >> $REPORT_SUBDOMAIN
  echo "</pre>" >> $REPORT_SUBDOMAIN
  
  echo "<div style=\"font-family: 'Mina', serif;\"><h2>Dig Info</h2></div>" >> $REPORT_SUBDOMAIN
  echo "<pre>" >> $REPORT_SUBDOMAIN
  dig $SUBDOMAIN >> $REPORT_SUBDOMAIN
  echo "</pre>" >> $REPORT_SUBDOMAIN
  
  echo "<div style=\"font-family: 'Mina', serif;\"><h2>Host Info</h1></div>" >> $REPORT_SUBDOMAIN
  echo "<pre>" >> $REPORT_SUBDOMAIN
  host $SUBDOMAIN >> $REPORT_SUBDOMAIN
  echo "</pre>" >> $REPORT_SUBDOMAIN
  
  echo "<div style=\"font-family: 'Mina', serif;\"><h2>Response Header</h1></div>" >> $REPORT_SUBDOMAIN
  echo "<pre>" >> $REPORT_SUBDOMAIN
  curl -sSL -D - $SUBDOMAIN  -o /dev/null >> $REPORT_SUBDOMAIN
  echo "</pre>" >> $REPORT_SUBDOMAIN
  
  echo "<div style=\"font-family: 'Mina', serif;\"><h1>Nmap Results</h1></div>" >> $REPORT_SUBDOMAIN
  echo "<pre>" >> $REPORT_SUBDOMAIN
  echo "nmap -sV -T3 -Pn -p3868,3366,8443,8080,9443,9091,3000,8000,5900,8081,6000,10000,8181,3306,5000,4000,8888,5432,15672,9999,161,4044,7077,4040,9000,8089,443,7447,7080,8880,8983,5673,7443" >> $REPORT_SUBDOMAIN
  nmap -sV -T3 -Pn -p3868,3366,8443,8080,9443,9091,3000,8000,5900,8081,6000,10000,8181,3306,5000,4000,8888,5432,15672,9999,161,4044,7077,4040,9000,8089,443,7447,7080,8880,8983,5673,7443 $SUBDOMAIN >> $REPORT_SUBDOMAIN
  echo "</pre></div>" >> $REPORT_SUBDOMAIN
  echo "</html>" >> $REPORT_SUBDOMAIN
}

main (){
  while read -r domain || [[ -n "$domain" ]]
  do
    DRECON="$DOUTPUT/$domain/$FNAME"
    DREPORTS="$DRECON/reports"
    DSCREENSHOTS="$DRECON/screenshots"
    FSUBDOMAINS="$DRECON/subdomains.txt"
    FRESOLVED="$DRECON/resolved.txt"
    FALTERATIONS="$DRECON/alterations.txt"
    FHOSTLIVE="$DRECON/hostlive.txt"
    FUNREACHABLE="$DRECON/unreachable.txt"

    mkdir -p $DREPORTS
    mkdir -p $DSCREENSHOTS
    touch $FSUBDOMAINS
    touch $FRESOLVED
    touch $FUNREACHABLE
    touch $FHOSTLIVE
    cd $DRECON

    continue
    
    enumeration 1> >(tee -a $DRECON/$domain.log) 2> >(tee -a $DRECON/error.log)
    hostalive 1> >(tee -a $DRECON/$domain.log) 2> >(tee -a $DRECON/error.log)
    screenshot 1> >(tee -a $DRECON/$domain.log) 2> >(tee -a $DRECON/error.log)
    dirsearcher 1> >(tee -a $DRECON/$domain.log) 2> >(tee -a $DRECON/error.log)
    
  done < $FDOMAINS
  
}

echo "Inicio de Pentesting: $inicio" >> $outputDIR/pentest.log
echo "Inicio de Pentesting: $inicio" >> $outputDIR/error.log
#main 1> >(tee -a $outputDIR/pentest.log) 2> >(tee -a $outputDIR/error.log)
fin=$(date)
echo "Fin de Pentesting: $fin" >> $outputDIR/pentest.log
echo "Fin de Pentesting: $fin" >> $outputDIR/error.log

exit 0